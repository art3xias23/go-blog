
package components

import rssHelper "github.com/art3xias23/go-blog/rssHelper"
import "strings"
import html "golang.org/x/net/html"
import "fmt"

func extractImageURL(htmlString string) string {
	reader := strings.NewReader(htmlString)
	doc, err := html.Parse(reader)
	if err != nil {
		return ""
	}

	var imageURL string

	var extractURL func(*html.Node)
	extractURL = func(n *html.Node) {
		if n.Type == html.ElementNode && n.Data == "img" {
			for _, attr := range n.Attr {
				if attr.Key == "src" {
					imageURL = attr.Val
					return
				}
			}
		}
		for c := n.FirstChild; c != nil; c = c.NextSibling {
			extractURL(c)
		}
	}

	extractURL(doc)

	return imageURL
}
templ Letterboxd(items []rssHelper.Itemm){
<div class="films-container">
    for _, item:=range items{
        <div hx-get="/letter-redirect" 
			hx-push-url="true" 
			hx-trigger="click" 
			hx-vals={getHxValsString(item.Url)}
			class="film" >
          <div class="film-title">
              <h3 >{item.Title}</h3>
          </div>
          <div class="film-year">
              <i>{item.Year}</i>
          </div>
		  <div class="film-rating" data-rating={item.MemberRating} />
          <div class="film-image">
              <img class="film-image" src={ extractImageURL(item.Description) } alt="film-image"/>
          </div>
        </div>
    }
</div>
}

func getHxValsString(url string) string{
	var a = fmt.Sprintf(`{"url":"%s"}`, url)
	return a
}