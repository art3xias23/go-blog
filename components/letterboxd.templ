
package components

import rssHelper "github.com/art3xias23/go-blog/rssHelper"
import "strings"
import html "golang.org/x/net/html"
import "fmt"

func extractImageURL(htmlString string) string {
	reader := strings.NewReader(htmlString)
	doc, err := html.Parse(reader)
	if err != nil {
		return ""
	}

	var imageURL string

	var extractURL func(*html.Node)
	extractURL = func(n *html.Node) {
		if n.Type == html.ElementNode && n.Data == "img" {
			for _, attr := range n.Attr {
				if attr.Key == "src" {
					imageURL = attr.Val
					return
				}
			}
		}
		for c := n.FirstChild; c != nil; c = c.NextSibling {
			extractURL(c)
		}
	}

	extractURL(doc)

	return imageURL
}
templ Letterboxd(items []rssHelper.Itemm){
<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6 3xl:grid-cols-7 4xl:grid-cols-8 gap-4">
    for _, item:=range items{
        <div hx-get="/letter-redirect" 
			class="bg-gray-400 rounded-sm h-full border-black border-2 overflow-hidden grid grid-cols-1 grid-rows-layout" 
			hx-push-url="true" 
			hx-trigger="click" 
			hx-vals={getHxValsString(item.Url)} >
          <div class="font-bold text-2xl text-center w-full h-full overflow-hidden">
              {item.Title}
          </div>
          <div class="text-center h-full">
              <i>{item.Year}</i>
          </div>
		  <div class="text-center media-item-rating" data-rating={item.MemberRating} />
          <div class="transform scale-100 h-full w-full overflow-hidden">
              <img class="transform scale-100 h-25 w-25 overflow-hidden" src={ extractImageURL(item.Description) } alt="media-item-image"/>
          </div>
        </div>
    }
</div>
}

func getHxValsString(url string) string{
	var a = fmt.Sprintf(`{"url":"%s"}`, url)
	return a
}
